apply from: "$rootDir/gradle/base_android_lib.gradle"
apply from: "$rootDir/gradle/deploy_services.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def user_agent = "PX/Android/" + (version_to_deploy as String)

android {
    defaultConfig {
        buildConfigField "String", "USER_AGENT", "\"$user_agent\""
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_ENVIRONMENT", "\"v1\""
            buildConfigField "String", "API_ENVIRONMENT_NEW", "\"production\""
            buildConfigField "boolean", "HTTP_CLIENT_LOG", "true"
        }

        debugBeta {
            initWith debug
            buildConfigField "String", "API_ENVIRONMENT", "\"beta\""
            buildConfigField "String", "API_ENVIRONMENT_NEW", "\"beta\""
        }

        release {
            buildConfigField "String", "API_ENVIRONMENT", "\"v1\""
            buildConfigField "String", "API_ENVIRONMENT_NEW", "\"production\""
            buildConfigField "boolean", "HTTP_CLIENT_LOG", "false"
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    androidTestImplementation project(":testlib")

    implementation project(':px-addons')
    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.google.code.gson:gson:$gson"
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
}